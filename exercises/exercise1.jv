// Jayvee model to build a pipeline
// from a csv file in the web to a SQLite data sink.

pipeline AirportDataPipeline{

// Extractor Block : To get the data from the source
    block AirportDataExtractor oftype HttpExtractor {
        url: "https://opendata.rhein-kreis-neuss.de/api/v2/catalog/datasets/rhein-kreis-neuss-flughafen-weltweit/exports/csv";
    }

//Transformer Block 1 :Transforming file to Textfile
block AirportDataTextFileInterpreter oftype TextFileInterpreter{

}

// Transformer Block 2:
    block AirportDataCSVInterpreter oftype CSVInterpreter {
        delimiter: ";";
    }

// Transformer Block 3 : Assigning data type to columns on csv file.
block AirportDataTableInterpreter oftype TableInterpreter{
    header:false;
    columns:[
        "column_1" oftype integer,
        "column_2" oftype text,
        "column_3" oftype text,
        "column_4" oftype text,
        "column_5" oftype text,
        "column_6" oftype text,
        "column_7" oftype decimal,
        "column_8" oftype decimal,
        "column_9" oftype integer,
        "column_10" oftype decimal,
        "column_11" oftype text,
        "column_12" oftype text,
        "geo_punkt" oftype text
        
    ];
}

 // Loader Block: Model data into sqlite
block AirportDataDBLoader oftype SQLiteLoader {
    table: "airports";
    file: "./airports.sqlite";
}


// Pipe: A chain of pipeline for AirportData
AirportDataExtractor
    -> AirportDataTextFileInterpreter
    -> AirportDataCSVInterpreter
    -> AirportDataTableInterpreter
    -> AirportDataDBLoader;
    
}